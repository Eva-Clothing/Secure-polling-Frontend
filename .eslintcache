[{"/home/tusharu/Desktop/Secure-polling-Frontend/src/index.js":"1","/home/tusharu/Desktop/Secure-polling-Frontend/src/App.js":"2","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/User/Signup.js":"3","/home/tusharu/Desktop/Secure-polling-Frontend/src/auth/PrivateRoutes.js":"4","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/LineGraph/LineGraph.js":"5","/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/configureStore.js":"6","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/barGraph/BarGraph.js":"7","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/Landing/Landing.js":"8","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/dataTable/DataTable.js":"9","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/Drawer.js":"10","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/PollMain/PollMain.js":"11","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/header/Header.js":"12","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/User/Signin.js":"13","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/Instructions/Instructions.js":"14","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/FaceDetection/FaceDetection.js":"15","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/Card/CardVote.js":"16","/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/actionCreators.js":"17","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/dataTable/Table.js":"18","/home/tusharu/Desktop/Secure-polling-Frontend/src/auth/helper.js":"19","/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/reducers/vote.js":"20","/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/reducers/line.js":"21","/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/reducers/bar.js":"22","/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/reducers/data.js":"23","/home/tusharu/Desktop/Secure-polling-Frontend/src/config.js":"24","/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/actionTypes.js":"25"},{"size":197,"mtime":1612076791687,"results":"26","hashOfConfig":"27"},{"size":2241,"mtime":1612098843454,"results":"28","hashOfConfig":"27"},{"size":3828,"mtime":1612088065001,"results":"29","hashOfConfig":"27"},{"size":571,"mtime":1612082879486,"results":"30","hashOfConfig":"27"},{"size":3545,"mtime":1612080961684,"results":"31","hashOfConfig":"27"},{"size":706,"mtime":1612076791687,"results":"32","hashOfConfig":"27"},{"size":2830,"mtime":1612080551176,"results":"33","hashOfConfig":"27"},{"size":3385,"mtime":1612100469411,"results":"34","hashOfConfig":"27"},{"size":1711,"mtime":1612080168050,"results":"35","hashOfConfig":"27"},{"size":3288,"mtime":1612100266503,"results":"36","hashOfConfig":"27"},{"size":6289,"mtime":1612098302871,"results":"37","hashOfConfig":"27"},{"size":627,"mtime":1612098302871,"results":"38","hashOfConfig":"27"},{"size":3637,"mtime":1612098769657,"results":"39","hashOfConfig":"27"},{"size":1497,"mtime":1612098302871,"results":"40","hashOfConfig":"27"},{"size":4939,"mtime":1612098302871,"results":"41","hashOfConfig":"27"},{"size":478,"mtime":1612099490784,"results":"42","hashOfConfig":"27"},{"size":2946,"mtime":1612081907059,"results":"43","hashOfConfig":"27"},{"size":574,"mtime":1612076791687,"results":"44","hashOfConfig":"27"},{"size":1089,"mtime":1612099396213,"results":"45","hashOfConfig":"27"},{"size":710,"mtime":1612076791687,"results":"46","hashOfConfig":"27"},{"size":887,"mtime":1612076791687,"results":"47","hashOfConfig":"27"},{"size":662,"mtime":1612076791687,"results":"48","hashOfConfig":"27"},{"size":702,"mtime":1612076791687,"results":"49","hashOfConfig":"27"},{"size":49,"mtime":1612076791687,"results":"50","hashOfConfig":"27"},{"size":562,"mtime":1612076791687,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"egnkws",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/tusharu/Desktop/Secure-polling-Frontend/src/index.js",[],["109","110"],"/home/tusharu/Desktop/Secure-polling-Frontend/src/App.js",["111","112","113"],"import './App.css';\nimport Header from './components/header/Header'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport PollMain from './components/PollMain/PollMain';\nimport DataTable from './components/dataTable/DataTable'\nimport Signin from \"./components/User/Signin\"\nimport Signup from \"./components/User/Signup\"\nimport DrawerTag from \"./components/Drawer\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport BarGraph from './components/barGraph/BarGraph';\nimport LineGraph from './components/LineGraph/LineGraph';\nimport Instructions from './components/Instructions/Instructions';\nimport { Provider } from 'react-redux';\nimport ConfigureStore from './redux/configureStore';\nimport FaceDetection from './components/FaceDetection/FaceDetection';\nimport PrivateRoute from \"./auth/PrivateRoutes\"\nimport Landing from \"./components/Landing/Landing\"\nimport CardVote from \"./components/Card/CardVote\"\n\nconst useStyles = makeStyles((theme) => ({\n  drawerPaper: { width: 'inherit' },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.text.primary\n  }\n}));\n\nconst store = ConfigureStore;\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route path=\"/signin\" component={Signin} />\n            <Route path=\"/signup\" component={Signup} />\n            <PrivateRoute exact path=\"/instructions\" component={() => { return <Instructions classes={classes} /> }} />\n            <PrivateRoute exact path=\"/vote\" component={() => { return <PollMain classes={classes} /> }} />\n            <PrivateRoute path=\"/data\" component={() => { return <DataTable classes={classes} /> }} />\n            <PrivateRoute path=\"/barGraph\" component={() => { return <BarGraph classes={classes} /> }} />\n            <PrivateRoute path=\"/lineGraph\" component={() => { return <LineGraph classes={classes} /> }} />\n            <PrivateRoute path=\"/card\" component={CardVote}/>\n            <PrivateRoute path=\"/faceDetection\" component={FaceDetection} />\n          </Switch>\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/User/Signup.js",["114","115"],"import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport React, {useState} from 'react';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {signup} from '../../auth/helper';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [values,setValues] = useState({\n    email:\"\",\n    password:\"\",\n    passwordCheck:\"\"\n    })\nconst {email, password,passwordCheck} = values;\n\n\nconst handleChange = event => {\n\n  setValues({...values, [event.target.name]: event.target.value});\n  \n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n  console.log(values)\n  signup({email,password,passwordCheck})\n  .then((data)=>{\n      setValues({email:\"\",password:\"\",passwordCheck:\"\"})\n  })\n}\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            \n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"passwordCheck\"\n                label=\"confirmPassword\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        \n      </Box>\n    </Container>\n  );\n}","/home/tusharu/Desktop/Secure-polling-Frontend/src/auth/PrivateRoutes.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/components/LineGraph/LineGraph.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/configureStore.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/components/barGraph/BarGraph.js",["116","117"],"import { Card, CardContent } from '@material-ui/core';\nimport Axios from 'axios';\nimport Header from \"../header/Header\"\nimport DrawerTag from \"../Drawer\"\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles'\nimport React, { Component } from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Bar } from 'react-chartjs-2'\nimport { fetchChart } from '../../redux/actionCreators';\nimport './BarGraph.css'\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n    title: {\n        display: false,\n        title: 'Poll for person Liking covid',\n        fontSize: 30\n    },\n    legend: {\n        display: true,\n        position: 'top'\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        chartData: state.bar.chartData,\n        isLoading: state.bar.isLoading,\n        err: state.bar.err\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchChart: () => dispatch(fetchChart())\n})\n\n\nclass BarGraph extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n    componentDidMount() {\n        this.props.fetchChart()\n        \n    }\n    \n\n    render() {\n        \n        if (this.props.isLoading) {\n            return (<>\n                <div className=\"center\">\n\n                    <CircularProgress color=\"secondary\" />\n                </div>\n\n\n            </>)\n        }\n        const barGraph = {\n            labels: ['Yes', 'No', 'total'],\n            datasets: [{\n                label: 'Voting Result',\n                data: [this.props.chartData[0].count, this.props.chartData[1].count, this.props.chartData[0].count + this.props.chartData[1].count],\n                backgroundColor: [\n                    'rgba(51,255,0,0.2)',\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)'\n                ],\n                borderColor: [\n                    'rgba(51,255,0,1)',\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(255, 206, 86, 1)',\n                ],\n                borderWidth: 1\n            }]\n        }\n\n        return (\n            <>\n                <Header />\n                <DrawerTag classes= {this.props.classes}/>\n                <Card className=\"barStyle\">\n                    <CardContent className=\"header\">\n                        <h1>Result for the polls </h1>\n                    </CardContent>\n                    <Bar height=\"600px\" width=\"800px\" data={barGraph} options={options} />\n                </Card>\n            </>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BarGraph))\n","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/Landing/Landing.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/components/dataTable/DataTable.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/components/Drawer.js",["118","119"],"/home/tusharu/Desktop/Secure-polling-Frontend/src/components/PollMain/PollMain.js",["120"],"import { Button, FormControl, FormControlLabel, FormLabel, Grid, Paper, Radio, RadioGroup, TextField } from '@material-ui/core'\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport PollRoundedIcon from '@material-ui/icons/PollRounded';\nimport { Avatar } from '@material-ui/core';\nimport Header from \"../header/Header\"\nimport DrawerTag from \"../Drawer\"\nimport M from 'materialize-css'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { makeVote, reset_form } from '../../redux/actionCreators';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        voteSuccess: state.vote.voteSuccess,\n        voteFail: state.vote.voteFail,\n        err: state.vote.err\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    makeVote: (FormData) => dispatch(makeVote(FormData)),\n    reset_form: () => dispatch(reset_form())\n})\n\n\n\nclass pollMain extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            name: \"\",\n            casted_at: \"\",\n            choice: \"false\"\n\n        };\n        this.handleClick = this.handleClick.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleInput = this.handleInput.bind(this)\n        this.submitForm = this.submitForm.bind(this)\n    }\n    handleClick = () => {\n        this.setState({ open: true })\n    };\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        this.setState({ open: false })\n    };\n\n    handleInput = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n\n    }\n    submitForm = (e) => {\n        e.preventDefault()\n        const obj = {\n            name: this.state.name,\n            casted_at: this.state.casted_at,\n            choice: this.state.choice\n        }\n        this.props.makeVote(obj)\n        if (this.props.voteSuccess) {\n            M.toast({ html: 'Vote has been caster successfully!!', classes: \"#43a047 green darken-1\" })\n            this.handleClick();\n        }\n        else {\n            M.toast({ html: 'You have already casted the vote', classes: \"#c62828 red darken-3\" })\n        }\n        this.setState({ name: \"\", casted_at: \"\", choice: false })\n        setTimeout(() => {\n            this.props.reset_form()\n        }, 1000)\n\n    }\n    render() {\n        const classes = makeStyles((theme) => ({\n            root: {\n                width: '100%',\n                '& > * + *': {\n                    marginTop: theme.spacing(2),\n                },\n            },\n        }));\n        const paperStyle = { padding: 20, height: '70vh', width: \"30%\", margin: '20px auto', borderRadius: '30px' }\n        const textFieldCSS = { margin: '20px 0px' }\n        return (\n            <div>\n                <Header />\n                <DrawerTag classes={this.props.classes} />\n                <Grid>\n                    <Snackbar open={this.state.open} autoHideDuration={6000} onClose={this.handleClose}>\n                        <Alert onClose={this.handleClose} severity=\"success\">\n                            This is a success message!\n            </Alert>\n                    </Snackbar>\n\n                    <form onSubmit={this.submitForm} autoComplete=\"off\">\n                        <Paper elevation={10} style={paperStyle}>\n                            <Grid align=\"center\">\n                                <Avatar style={{ backgroundColor: \"#5cd235\", height: \"50px\", width: \"50px\", }}><PollRoundedIcon style={{ height: \"30px\", width: \"30px\" }} /></Avatar>\n                                <h2>POLL</h2>\n                            </Grid>\n                            <TextField\n                                required\n                                value={this.state.name}\n                                name=\"name\"\n                                onChange={this.handleInput}\n                                style={textFieldCSS}\n                                id=\"outlined-basic\"\n                                label=\"Name\"\n                                variant=\"outlined\"\n                                placeholder=\"Enter Your Name\"\n                                fullWidth color=\"primary\"\n                            />\n\n                            <TextField\n                                required\n                                style={textFieldCSS}\n                                id=\"datetime-local\"\n                                name=\"casted_at\"\n                                value={this.state.date}\n                                onChange={this.handleInput}\n                                label=\"Date of Polling\"\n                                type=\"date\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                fullWidth\n                            />\n                            <FormControl style={{ display: 'flex', alignItems: \"center\" }}>\n                                <FormLabel className=\"question\" fullWidth component=\"legend\" >Did You liked the LockDown during COVID-19🤔?</FormLabel>\n                                <RadioGroup name=\"choice\" value={this.state.choice} onChange={this.handleInput}>\n                                    <FormControlLabel style={{ color: \"green\", fontWeight: 100 }} value=\"true\" control={<Radio />} label=\"Yes\" />\n                                    <FormControlLabel style={{ color: \"red\" }} value=\"false\" control={<Radio />} label=\"No\" />\n                                </RadioGroup>\n                                <Button fullWidth style={{ margin: \"0px auto\" }} type=\"submit\" variant=\"outlined\" color=\"primary\">\n                                    Cast Vote\n            </Button>\n                            </FormControl>\n                        </Paper>\n                    </form>\n                </Grid>\n            </div>\n\n\n        )\n\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(pollMain))","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/header/Header.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/components/User/Signin.js",["121","122","123","124"],"import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { signin, authenticate, isAuthenticated } from '../../auth/helper';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    didRedirect: false\n  })\n  const { email, password, didRedirect } = values;\n  const { user } = isAuthenticated();\n\n  const handleChange = event => {\n\n    setValues({ ...values, [event.target.name]: event.target.value });\n\n  }\n\n  const onSubmit = event => {\n    event.preventDefault();\n    console.log(email,password)\n    signin({email,password})\n    .then(data =>{\n             \n        authenticate(data, () => {\n          setValues({\n            ...values,\n            didRedirect: true\n          })\n        })\n      }\n      )\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  const performRedirect = () => {\n    if (didRedirect || isAuthenticated()) {\n      return <Redirect to='/instructions' />\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleChange}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      {performRedirect()}\n    </Container>\n  );\n}","/home/tusharu/Desktop/Secure-polling-Frontend/src/components/Instructions/Instructions.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/components/FaceDetection/FaceDetection.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/components/Card/CardVote.js",["125"],"import React, {useState} from 'react';\nimport \"./CardVote.css\"\n\nconst email = localStorage.getItem('email')\n\nfunction CardVote(){\n    \n    return (\n        <div class=\"main_div\">\n        <div class=\"center_div\">\n            <div class=\"top_div\">\n                <h2>Name</h2>\n                <h1>SecureVote</h1>\n            </div>\n            <div class=\"bottom_div\">\n                <h2>{email}</h2>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default CardVote","/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/actionCreators.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/components/dataTable/Table.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/auth/helper.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/reducers/vote.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/reducers/line.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/reducers/bar.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/reducers/data.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/config.js",[],"/home/tusharu/Desktop/Secure-polling-Frontend/src/redux/actionTypes.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"134","line":3,"column":35,"nodeType":"132","messageId":"133","endLine":3,"endColumn":39},{"ruleId":"130","severity":1,"message":"135","line":8,"column":8,"nodeType":"132","messageId":"133","endLine":8,"endColumn":17},{"ruleId":"130","severity":1,"message":"136","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":24},{"ruleId":"130","severity":1,"message":"137","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":16},{"ruleId":"130","severity":1,"message":"138","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":13},{"ruleId":"130","severity":1,"message":"139","line":7,"column":10,"nodeType":"132","messageId":"133","endLine":7,"endColumn":20},{"ruleId":"130","severity":1,"message":"140","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":27},{"ruleId":"130","severity":1,"message":"141","line":13,"column":9,"nodeType":"132","messageId":"133","endLine":13,"endColumn":17},{"ruleId":"130","severity":1,"message":"142","line":94,"column":15,"nodeType":"132","messageId":"133","endLine":94,"endColumn":22},{"ruleId":"130","severity":1,"message":"136","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":24},{"ruleId":"130","severity":1,"message":"137","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":16},{"ruleId":"130","severity":1,"message":"143","line":9,"column":8,"nodeType":"132","messageId":"133","endLine":9,"endColumn":11},{"ruleId":"130","severity":1,"message":"144","line":47,"column":11,"nodeType":"132","messageId":"133","endLine":47,"endColumn":15},{"ruleId":"130","severity":1,"message":"145","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":24},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'DrawerTag' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Axios' is defined but never used.","'makeStyles' is defined but never used.","'SecurityRoundedIcon' is defined but never used.","'Redirect' is defined but never used.","'classes' is assigned a value but never used.","'Box' is defined but never used.","'user' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]